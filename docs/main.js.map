{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, NgZone } from '@angular/core';\r\nimport { subscribers } from '@rxjs-insights/console';\r\nimport {\r\n  asapScheduler,\r\n  filter,\r\n  interval,\r\n  map,\r\n  Observable,\r\n  of,\r\n  scheduled,\r\n  share,\r\n  switchMap,\r\n  take,\r\n  zip,\r\n} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  constructor(private readonly ngZone: NgZone) {}\r\n\r\n  runSimple() {\r\n    const subscription = of(1, 2, 3)\r\n      .pipe(\r\n        map((x) => x * x),\r\n        filter((x) => x % 2 !== 0)\r\n      )\r\n      .subscribe();\r\n    subscribers(subscription);\r\n  }\r\n\r\n  runComplex() {\r\n    const subscription = zip([of(1, 2, 3), of('a', 'b', 'c')])\r\n      .pipe(\r\n        switchMap(([num, str]) => {\r\n          return new Observable((observer) => {\r\n            for (let i = 0; i < num; i++) {\r\n              observer.next(str);\r\n            }\r\n            observer.complete();\r\n          });\r\n        })\r\n      )\r\n      .subscribe();\r\n    subscribers(subscription);\r\n  }\r\n\r\n  runAsync() {\r\n    const subscription = interval(100).pipe(take(10)).subscribe();\r\n    subscribers(subscription);\r\n  }\r\n\r\n  runAsyncOutsideAngular() {\r\n    this.ngZone.runOutsideAngular(() => this.runAsync());\r\n  }\r\n\r\n  runShared() {\r\n    const shared = scheduled([1, 2, 3], asapScheduler).pipe(share());\r\n    shared.pipe(map((x) => 1 / x)).subscribe();\r\n    shared.pipe(map((x) => x / 3)).subscribe();\r\n    subscribers(shared);\r\n  }\r\n}\r\n","<header>\n  <mat-toolbar color=\"primary\">\n    <span>RxJS Insights Angular Demo</span>\n  </mat-toolbar>\n</header>\n<main class=\"main\">\n  <mat-card class=\"card\">\n    <p>\n      Click one of the buttons below to run some rxjs code. Open the browser console\n      to see the observables, subscribers and event.\n    </p>\n    <p>\n      TIP! Expand the \"More\" object at the end of the log line and invoke the\n      property getters to get an interactive experience. For example, try clicking\n      the \"inspect events flow\" getter.\n    </p>\n    <p>\n      EXERCISE! Can you guess why the \"Async example\" listing looks different when\n      it's run outside of the NgZone? Try to figure it out by using the interactive\n      console :)\n    </p>\n    <mat-card-actions align=\"end\">\n      <a mat-button href=\"https://github.com/ksz-ksz/rxjs-insights-angular\">Source code of this app</a>\n      <a mat-button href=\"https://github.com/ksz-ksz/rxjs-insights\">Source code of rxjs-insights</a>\n    </mat-card-actions>\n  </mat-card>\n  <mat-card class=\"card\">\n    <mat-card-title>Simple example</mat-card-title>\n    <pre><code>\nof(1, 2, 3)\n.pipe(\n  map((x) => x * x),\n  filter((x) => x % 2 !== 0)\n)\n.subscribe();\n    </code></pre>\n    <mat-card-actions align=\"end\">\n      <button mat-button (click)=\"runSimple()\">RUN</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card class=\"card\">\n    <mat-card-title>Complex example</mat-card-title>\n    <pre><code>\nzip([of(1, 2, 3), of('a', 'b', 'c')])\n.pipe(\n  switchMap(([num, str]) => {{'{'}}\n    return new Observable((observer) => {{'{'}}\n      for (let i = 0; i < num; i++) {{'{'}}\n        observer.next(str);\n      }\n      observer.complete();\n    });\n  })\n)\n.subscribe();\n    </code></pre>\n    <mat-card-actions align=\"end\">\n      <button mat-button (click)=\"runComplex()\">RUN</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card class=\"card\">\n    <mat-card-title>Shared example</mat-card-title>\n    <pre><code>\nconst shared = scheduled([1, 2, 3], asapScheduler).pipe(share());\nshared.pipe(map((x) => 1 / x)).subscribe();\nshared.pipe(map((x) => x / 3)).subscribe();\n    </code></pre>\n    <mat-card-actions align=\"end\">\n      <button mat-button (click)=\"runShared()\">RUN</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card class=\"card\">\n    <mat-card-title>Async example</mat-card-title>\n    <pre><code>\ninterval(100).pipe(take(10)).subscribe();\n    </code></pre>\n    <mat-card-actions align=\"end\">\n      <button mat-button (click)=\"runAsync()\">RUN</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <mat-card class=\"card\">\n    <mat-card-title>Async example (outside NgZone)</mat-card-title>\n    <pre><code>\ninterval(100).pipe(take(10)).subscribe();\n    </code></pre>\n    <mat-card-actions align=\"end\">\n      <button mat-button (click)=\"runAsyncOutsideAngular()\">RUN</button>\n    </mat-card-actions>\n  </mat-card>\n</main>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}